From f2e5957e5d58dd56ca3624218392c9d680209eab Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Miroslav=20S=CC=8Cafa=CC=81r=CC=8C?=
 <miroslav.safar@znojmo.cz>
Date: Mon, 19 Jun 2023 13:56:21 +0200
Subject: [PATCH] Fix: filter player session packet


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java b/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
index b3c8c6e2..ad5dd6ab 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
@@ -29,6 +29,7 @@ import net.md_5.bungee.protocol.packet.PlayerListHeaderFooter;
 import net.md_5.bungee.protocol.packet.PlayerListItem;
 import net.md_5.bungee.protocol.packet.PlayerListItemRemove;
 import net.md_5.bungee.protocol.packet.PlayerListItemUpdate;
+import net.md_5.bungee.protocol.packet.PlayerSession; // QPlay
 import net.md_5.bungee.protocol.packet.PluginMessage;
 import net.md_5.bungee.protocol.packet.Respawn;
 import net.md_5.bungee.protocol.packet.ScoreboardDisplay;
@@ -248,4 +249,10 @@ public abstract class AbstractPacketHandler
     {
     }
     // Waterfall end
+
+    // QPlay start
+    public void handle(PlayerSession playerSession) throws Exception
+    {
+    }
+    // QPlay end
 }
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 82bfc51b..0d266998 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -37,6 +37,7 @@ import net.md_5.bungee.protocol.packet.PlayerListHeaderFooter;
 import net.md_5.bungee.protocol.packet.PlayerListItem;
 import net.md_5.bungee.protocol.packet.PlayerListItemRemove;
 import net.md_5.bungee.protocol.packet.PlayerListItemUpdate;
+import net.md_5.bungee.protocol.packet.PlayerSession;
 import net.md_5.bungee.protocol.packet.PluginMessage;
 import net.md_5.bungee.protocol.packet.Respawn;
 import net.md_5.bungee.protocol.packet.ScoreboardDisplay;
@@ -476,6 +477,14 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_19, 0x04 ),
                     map( ProtocolConstants.MINECRAFT_1_19_1, 0x05 )
             );
+            // QPlay start
+            TO_SERVER.registerPacket(
+                    PlayerSession.class,
+                    PlayerSession::new,
+                    map( ProtocolConstants.MINECRAFT_1_19_3, 0x20 ),
+                    map( ProtocolConstants.MINECRAFT_1_20, 0x06 )
+            );
+            // QPlay end
             TO_SERVER.registerPacket(
                     TabCompleteRequest.class,
                     TabCompleteRequest::new,
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerSession.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerSession.java
new file mode 100644
index 00000000..3c8ee563
--- /dev/null
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PlayerSession.java
@@ -0,0 +1,40 @@
+package net.md_5.bungee.protocol.packet;
+
+import io.netty.buffer.ByteBuf;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import net.md_5.bungee.protocol.AbstractPacketHandler;
+import net.md_5.bungee.protocol.DefinedPacket;
+import net.md_5.bungee.protocol.ProtocolConstants;
+
+@Data
+@EqualsAndHashCode(callSuper = false)
+public class PlayerSession extends DefinedPacket
+{
+
+    public PlayerSession()
+    {
+
+    }
+
+    @Override
+    public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        readUUID(buf);
+        buf.readLong();
+        readArray(buf, 2048); // Mirek: I hope it is enough
+        readArray(buf, 2048); // Mirek: I hope it is enough
+    }
+
+    @Override
+    public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion)
+    {
+        // Not implemented, this packet is only there to be filtered by Bungeecord
+    }
+
+    @Override
+    public void handle(AbstractPacketHandler handler) throws Exception
+    {
+        handler.handle( this );
+    }
+}
\ No newline at end of file
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index b9d250d9..e3170c9c 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -37,6 +37,7 @@ import net.md_5.bungee.protocol.packet.KeepAlive;
 import net.md_5.bungee.protocol.packet.LoginAcknowledged;
 import net.md_5.bungee.protocol.packet.PlayerListItem;
 import net.md_5.bungee.protocol.packet.PlayerListItemRemove;
+import net.md_5.bungee.protocol.packet.PlayerSession;
 import net.md_5.bungee.protocol.packet.PluginMessage;
 import net.md_5.bungee.protocol.packet.StartConfiguration;
 import net.md_5.bungee.protocol.packet.TabCompleteRequest;
@@ -392,4 +393,12 @@ public class UpstreamBridge extends PacketHandler
     {
         return "[" + con.getAddress() + "|" + con.getName() + "] -> UpstreamBridge";
     }
+
+    // QPlay start
+    @Override
+    public void handle(PlayerSession playerSession) throws Exception
+    {
+        throw CancelSendSignal.INSTANCE;
+    }
+    // QPlay end
 }
-- 
2.41.0

